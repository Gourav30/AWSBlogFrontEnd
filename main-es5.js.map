{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/blog-create/blog-create.component.ts","webpack:///src/app/blog-create/blog-create.component.html","webpack:///src/app/blog-edit/blog-edit.component.ts","webpack:///src/app/blog-edit/blog-edit.component.html","webpack:///src/app/blog-http.service.ts","webpack:///src/app/blog-view/blog-view.component.ts","webpack:///src/app/blog-view/blog-view.component.html","webpack:///src/app/blog.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/not-found/not-found.component.ts","webpack:///src/app/not-found/not-found.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","AppComponent","title","AppModule","forRoot","path","component","redirectTo","pathMatch","declarations","imports","providers","bootstrap","BlogCreateComponent","blogHttpService","_route","router","toastr","possibleCategory","blogData","blogTitle","description","blogDescription","blogBody","blogBodyHtml","category","blogCategory","fullName","blogAuthor","createBlog","subscribe","data","console","log","success","setTimeout","navigate","blogId","error","errorMessage","BlogEditComponent","myBlogId","snapshot","paramMap","get","getSingleBlogInfo","currentBlog","editBlog","BlogHttpService","_http","baseUrl","authToken","myResponse","currentBlogId","post","put","providedIn","BlogViewComponent","blogService","location","deleteBlog","back","BlogService","allBlogs","blog","HomeComponent","getAllBlogs","NotFoundComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>About works after adding Routes!</p>","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent {\n  title = 'My Blog Application';\n\n  constructor() { }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row header\">\n        <div class=\"col-md-12\">\n            <a style=\"color:white\">{{title}}</a>\n        </div>\n    </div>\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" routerLinkActive=\"selected\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav\">\n                <li class=\"nav-item active\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                    <a class=\"nav-link\" [routerLink]=\"['/home']\" >Home</a>\n                </li>\n                <li class=\"nav-item active\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                    <a class=\"nav-link\" [routerLink]=\"['/about']\" >About</a>\n                </li>\n                <li class=\"nav-item active\" data-toggle=\"collapse\" data-target=\".navbar-collapse.show\">\n                    <a class=\"nav-link\" [routerLink]=\"['/create']\">Post A blog</a>\n                </li>\n            </ul>\n        </div>\n    </nav>\n</div>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Component } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { BlogViewComponent } from './blog-view/blog-view.component';\nimport { BlogCreateComponent } from './blog-create/blog-create.component';\nimport { BlogEditComponent } from './blog-edit/blog-edit.component';\nimport { AboutComponent } from './about/about.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n//import statement for service\nimport { BlogService } from './blog.service';\nimport { BlogHttpService } from './blog-http.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BlogViewComponent,\n    BlogCreateComponent,\n    BlogEditComponent,\n    AboutComponent,\n    NotFoundComponent\n  ],\n\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot(),\n\n    RouterModule.forRoot([\n      { path: 'home', component: HomeComponent },\n      { path: 'about', component: AboutComponent },\n      { path: 'create', component: BlogCreateComponent },\n      { path: 'edit/:blogId', component: BlogEditComponent },\n      { path: 'blog/:blogId', component: BlogViewComponent },\n      { path: '**', component: NotFoundComponent },\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n    ])\n  ],\n  providers: [BlogService, BlogHttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BlogHttpService } from '../blog-http.service';\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-blog-create',\n  templateUrl: './blog-create.component.html',\n  styleUrls: ['./blog-create.component.css']\n})\nexport class BlogCreateComponent implements OnInit {\n\n\n  constructor(public blogHttpService: BlogHttpService, private _route: ActivatedRoute, private router: Router, private toastr: ToastrService) { }\n\n  public blogTitle: string;\n  public blogDescription: string;\n  public blogBodyHtml: string;\n  public blogCategory: string;\n  public blogAuthor : string;\n  public possibleCategory = [\"Comedy\", \"Drama\", \"Entertainement\", \"Technology\", \"Test\"]\n\n  ngOnInit(): void {\n\n  }\n\n  public createBlog() {\n\n    let blogData = {\n\n      title: this.blogTitle,\n      description: this.blogDescription,\n      blogBody: this.blogBodyHtml,\n      category: this.blogCategory,\n      fullName: this.blogAuthor,\n\n    }\n\n    this.blogHttpService.createBlog(blogData).subscribe(\n\n      data => {\n        console.log(\"Blog Created\");\n        console.log(data);\n        this.toastr.success(\"Blog Posted Successfully\");\n        setTimeout(() => {\n          this.router.navigate(['/blog', data.data.blogId])\n        }, 2000)\n      },\n      error => {\n        console.log(\"error is occured\");\n        console.log(error.errorMessage);\n        this.toastr.error(\"Some error occured\");\n      }\n    )\n  }\n}\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <form #createBlogForm=\"ngForm\" (ngSubmit)=\"createBlog()\">\r\n                <div class=\"form-group\">\r\n\r\n                    <label>Blog Title</label>\r\n                    <input type=\"text\" name=\"blogTitle\" [(ngModel)]=\"blogTitle\" #title=\"ngModel\" class=\"form-control\"\r\n                        placeholder=\"Enter the Blog Title\" required>\r\n                    <div>\r\n                        <div [hidden]=\"title.valid || title.pristine\" class=\"alert alert-danger\">\r\n                            Blog Title is Required\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label>Description</label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"blogDescription\" [(ngModel)]=\"blogDescription\"\r\n                        #description=\"ngModel\" required>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Body</label>\r\n                    <textarea type=\"text\" class=\"form-control\" name=\"blogBodyHtml\" [(ngModel)]=\"blogBodyHtml\"\r\n                        #body=\"ngModel\" rows=\"3\" required></textarea>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Author</label>\r\n                    <input type=\"text\" class=\"form-control\" name=\"blogAuthor\" [(ngModel)]=\"blogAuthor\"\r\n                        #description=\"ngModel\" required>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Category</label>\r\n                    <select [(ngModel)]=\"blogCategory\" #category=\"ngModel\" name=\"blogCategory\" class=\"form-control\"\r\n                        id=\"category\" required>\r\n                        <option *ngFor=\"let category of possibleCategory\" [value]=\"category\">{{category}}</option>\r\n                    </select>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!createBlogForm.form.valid\">Post the\r\n                    Blog</button>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BlogService } from '../blog.service';\nimport { BlogHttpService } from '../blog-http.service';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ToastrService } from 'ngx-toastr';\nimport { Location } from '@angular/common';\n\n\n@Component({\n  selector: 'app-blog-edit',\n  templateUrl: './blog-edit.component.html',\n  styleUrls: ['./blog-edit.component.css']\n})\nexport class BlogEditComponent implements OnInit {\n\n  public currentBlog;\n  public possibleCategory = [\"Comedy\", \"Drama\", \"Entertainement\", \"Technology\", \"Test\"]\n\n\n  constructor(public blogHttpService: BlogHttpService, private _route: ActivatedRoute, private router: Router, private toastr: ToastrService) {\n\n  }\n\n\n  ngOnInit(): void {\n\n    let myBlogId = this._route.snapshot.paramMap.get('blogId');\n    console.log(myBlogId);\n    this.blogHttpService.getSingleBlogInfo(myBlogId).subscribe(\n\n      data => {\n        console.log(data);\n        this.currentBlog = data[\"data\"];\n        console.log(this.currentBlog);\n      },\n      error => {\n        console.log(\"error is occured\");\n        console.log(error.errorMessage)\n      }\n    )\n\n  }\n\n  public editThisBlog() {\n\n\n    this.blogHttpService.editBlog(this.currentBlog.blogId, this.currentBlog).subscribe(\n\n      data => {\n        console.log(\"Blog Created\");\n        console.log(data);\n        this.toastr.success(\"Blog Edited Successfully\");\n        setTimeout(() => {\n          this.router.navigate(['/blog', this.currentBlog.blogId])\n        }, 2000)\n      },\n      error => {\n        console.log(\"error is occured\");\n        console.log(error.errorMessage);\n        this.toastr.error(\"Some error occured\");\n      }\n    )\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <ng-container *ngIf=\"currentBlog\">\n                <form #createBlogForm=\"ngForm\" (ngSubmit)=\"editThisBlog()\">\n                    <div class=\"form-group\">\n                        <label>Blog Title</label>\n                        <input type=\"text\" name=\"blogTitle\" [(ngModel)]=\"currentBlog.title\" #title=\"ngModel\"\n                            class=\"form-control\" placeholder=\"Enter the Blog Title\" required>\n                        <div>\n                            <div [hidden]=\"title.valid || title.pristine\" class=\"alert alert-danger\">\n                                Blog Title is Required\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Description</label>\n                        <input type=\"text\" name=\"blogDescription\" [(ngModel)]=\"currentBlog.description\"\n                            #description=\"ngModel\" class=\"form-control\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Body</label>\n                        <textarea type=\"text\" name=\"blogBodyHtml\" [(ngModel)]=\"currentBlog.bodyHtml\" #body=\"ngModel\"\n                            rows=\"3\" class=\"form-control\" required></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Author</label>\n                        <input type=\"text\" name=\"blogAuthor\" [(ngModel)]=\"currentBlog.author\" #description=\"ngModel\"\n                            class=\"form-control\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Category</label>\n                        <select name=\"blogCategory\" [(ngModel)]=\"currentBlog.category\" #category=\"ngModel\"\n                            class=\"form-control\" id=\"category\" required>\n                            <option *ngFor=\"let category of possibleCategory\" [value]=\"category\">{{category}}</option>\n                        </select>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!createBlogForm.form.valid\">Edit the\n                        Blog</button>\n                </form>\n            </ng-container>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { tap, map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogHttpService {\n\n  public allBlogs;\n  public currentBlog;\n\n\n  /* Without using proxy.conf.json*/\n  //public baseUrl = 'http://localhost:3000/';\n  public baseUrl = 'http://api.gourav.tech/';\n\n  public authToken = 'Admin';\n\n\n  constructor(public _http: HttpClient) {\n    console.log(\"blog http service is called\")\n  }\n\n  /*Another mathod to pass the baseUrl using getBaseUrl() method */\n  // getBaseUrl() {\n  //   return 'http://localhost:3000/';\n\n  // }\n\n\n  public getAllBlogs(): any {\n    // let myResponse = this._http.get(this.baseUrl + '/all' + '?authToken=' + this.authToken);\n    // let myResponse = this._http.get(this.getBaseUrl() + 'api/v1/blogs/all?authToken=' + this.authToken);\n    let myResponse = this._http.get(this.baseUrl + 'api/v1/blogs/all?authToken=' + this.authToken);\n    console.log(myResponse);\n    return myResponse;\n  }\n\n\n  public getSingleBlogInfo(currentBlogId): any {\n\n    //let myResponse = this._http.get(this.baseUrl + '/view' + '/' + currentBlogId + '?authToken=' + this.authToken);\n    let myResponse = this._http.get(this.baseUrl + 'api/v1/blogs/view' + '/' + currentBlogId + '?authToken=' + this.authToken);\n    return myResponse;\n  }\n\n  public createBlog(blogData): any {\n\n    //let myResponse = this._http.post(this.baseUrl + '/create' + '?authToken=' + this.authToken, blogData);\n    let myResponse = this._http.post(this.baseUrl + 'api/v1/blogs/create' + '?authToken=' + this.authToken, blogData);\n    return myResponse;\n  }\n\n  public deleteBlog(blogId): any {\n\n    let data = {}\n    //let myResponse = this._http.post(this.baseUrl + '/' + blogId + '/delete' + '?authToken=' + this.authToken, data);\n    let myResponse = this._http.post(this.baseUrl + 'api/v1/blogs' + '/' + blogId + '/delete' + '?authToken=' + this.authToken, data);\n    return myResponse;\n  }\n\n  public editBlog(blogId, blogData): any {\n\n    //let myResponse = this._http.put(this.baseUrl + '/' + blogId + '/edit' + '?authToken=' + this.authToken, blogData);\n    let myResponse = this._http.put(this.baseUrl + 'api/v1/blogs' + '/' + blogId + '/edit' + '?authToken=' + this.authToken, blogData);\n    return myResponse;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n//importing route related code\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BlogService } from '../blog.service';\nimport { BlogHttpService } from '../blog-http.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Location } from '@angular/common';\n\n\n@Component({\n  selector: 'app-blog-view',\n  templateUrl: './blog-view.component.html',\n  styleUrls: ['./blog-view.component.css'],\n  providers: [Location]\n})\nexport class BlogViewComponent implements OnInit {\n\n  public currentBlog;\n\n  constructor(private _route: ActivatedRoute, private router: Router, public blogService: BlogService, public blogHttpService: BlogHttpService, private toastr: ToastrService, private location: Location) {\n    console.log(\"blog view constructor is called\");\n  }\n\n  ngOnInit() {\n\n    console.log(\"blog view ngOnInit is called\");\n    //getting the blog id from route\n    let myBlogId = this._route.snapshot.paramMap.get('blogId');\n    console.log(myBlogId);\n\n    //calling the function to get the blog with this blogId out of overall blogs\n    this.blogHttpService.getSingleBlogInfo(myBlogId).subscribe(\n      data => {\n        console.log(\"loding data\");\n        console.log(data);\n        this.currentBlog = data[\"data\"];\n      },\n      error => {\n        console.log(\"error is occured\");\n        console.log(error.errorMessage)\n      }\n    )\n  }\n\n  public deleteThisBlog(): any {\n    this.blogHttpService.deleteBlog(this.currentBlog.blogId).subscribe(\n      data => {\n        console.log(data);\n        this.toastr.success(\"Blog Deleted Successfully\");\n        setTimeout(() => {\n          this.router.navigate(['/home'])\n        }, 1000)\n      },\n      error => {\n        console.log(\"error is occured\");\n        console.log(error.errorMessage);\n        this.toastr.error(\"Some error occured\");\n      }\n    )\n  }\n\n  public goBackToPrePage() {\n    this.location.back();\n  }\n\n}\n","<div class=\"container\">\r\n    <div class=\"row\" *ngIf=\"currentBlog\"></div>\r\n    <div class=\"col-md-12\">\r\n        <!-- <p style=\"text-align: end; font-weight: bold;\">Views : {{currentBlog.increaseBlogView}}</p> -->\r\n        <ng-container *ngIf=\"currentBlog\">\r\n            <h2>{{currentBlog.title}}</h2>\r\n            <p>posted by {{currentBlog.author}} on {{currentBlog.created | date}}</p>\r\n            <p *ngIf=\"currentBlog.tags.lenght>0\">tags : <span\r\n                    *ngIf=\"let tag of currentBlog.tags; let first=first;let last=last\">{{tag}}{{last ? '' : ', '}}</span>\r\n            </p>\r\n            <hr>\r\n            <div [innerHtml]=\"currentBlog.bodyHtml\"></div>\r\n            <hr>\r\n            <h5>category - {{currentBlog.category}}</h5>\r\n        </ng-container>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"currentBlog\">\r\n        <div class=\"col-md-4\">\r\n            <a class=\"btn btn-primary\" [routerLink]=\"['/edit',currentBlog.blogId]\">Edit</a>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <a class=\"btn btn-danger\" (click)=\"deleteThisBlog()\">Delete </a>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <a class=\"btn btn-warning\" (click)=\"goBackToPrePage()\">Go Back </a>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n  public allBlogs = [{\n\n    \"blogId\": \"1\",\n    \"lastModified\": \"2020-04-28T10:46:12.854Z\",\n    \"created\": \"2019-04-28T10:46:12.854Z\",\n    \"tags\": \"\",\n    \"author\": \"Gourav\",\n    \"category\": \"Comedy\",\n    \"isPublished\": true,\n    \"views\": 0,\n    \"bodyHtml\": \"This is a 1st blog body HTML\",\n    \"description\": \"This is a 1st blog description\",\n    \"title\": \"This is blog 1\",\n  },\n  {\n    \"blogId\": \"2\",\n    \"lastModified\": \"2020-04-28T10:26:12.854Z\",\n    \"created\": \"2019-04-28T10:26:12.854Z\",\n    \"tags\": \"\",\n    \"author\": \"Vikas\",\n    \"category\": \"Comedy\",\n    \"isPublished\": true,\n    \"views\": 0,\n    \"bodyHtml\": \"This is a 2nd blog body HTML\",\n    \"description\": \"This is a 2nd blog description\",\n    \"title\": \"This is blog 2\",\n  },{\n    \"blogId\": \"3\",\n    \"lastModified\": \"2020-04-28T10:06:12.854Z\",\n    \"created\": \"2019-04-28T10:06:12.854Z\",\n    \"tags\": \"\",\n    \"author\": \"Gourav\",\n    \"category\": \"Comedy\",\n    \"isPublished\": true,\n    \"views\": 0,\n    \"bodyHtml\": \"This is a 3rd blog body HTML\",\n    \"description\": \"This is a 3rd blog description\",\n    \"title\": \"This is blog 3\",\n  }\n  ]\n\n  public currentBlog;\n\n  constructor() {\n    console.log(\"service constructor is called\")\n   }\n\n  public getAllBlogs(){\n    //metgod to return all the blogs\n    return this.allBlogs;\n  }\n\n  public getSingleBlogInfo(currentBlogId): any {\n\n    //using a for of loop here from type script\n\n    for (let blog of this.allBlogs) {\n      if (blog.blogId == currentBlogId) {\n        this.currentBlog = blog;\n      }\n    }\n    console.log(this.currentBlog);\n    return this.currentBlog;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BlogService } from '../blog.service';\nimport { BlogHttpService } from  '../blog-http.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public allBlogs=[];\n\n  constructor(public blogHttpService: BlogHttpService) {\n    console.log(\"Home constructor is called\");\n  }\n\n  ngOnInit(): void {\n    console.log(\"home component ngOnInit is called\");\n\n    this.allBlogs = this.blogHttpService.getAllBlogs().subscribe(\n\n      data => {\n        console.log(\"loding data\");\n        console.log(data);\n        this.allBlogs = data[\"data\"];\n      },\n      error => {\n        console.log(\"error is occured\");\n        console.log(error.errorMessage)\n  }\n    )\n}\n\n}\n","<div class=\"container\" style=\"text-align:center\">\r\n    <div class=\"row\" style=\"text-align:center\">\r\n        <div class=\"col-md-12\" style=\"font-size:22px\">All Blogs</div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n    <div class=\"row\" style=\"text-align:center\" *ngIf=\"allBlogs.length>0\">\r\n        <!-- iterative div starts below -->\r\n        <div *ngFor=\"let blog of allBlogs\" class=\"col-md-6\">\r\n            <div class=\"panel panel-default\" style=\"margin-top: 3px;  margin-bottom: 3px;\"  class=\"border border-primary\">\r\n                <div class=\"panel-heading\">{{blog.title | uppercase}}</div>\r\n                <div class=\"panel-body\">\r\n                    <p>{{blog.description}}</p>\r\n                </div>\r\n                <div class=\"panel-footer\">Posted on {{blog.created | date}}<br /> by {{blog.author}}\r\n                    <br /><br /> <a [routerLink]=\"['/blog',blog.blogId]\" class=\"btn btn-primary\"\r\n                        style=\"margin-bottom:5px\">View</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Redirecting to Not Found Compenent</p>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}